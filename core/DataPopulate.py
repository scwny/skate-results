# Generated by Django 5.0.14 on 2025-04-17 17:22

from django.db import migrations


def populate_initial_data(apps, schema_editor):
    # Get the model you want to populate (use `apps.get_model` to prevent circular imports)
    Competition = apps.get_model('core', 'Competition')
    Club = apps.get_model('core','Club')
    Skater = apps.get_model('core','Skater')
    Event = apps.get_model('core', 'Event')
    ScheduledSkater = apps.get_model('core', 'ScheduledSkater')

    # Add prepopulated data
    theCompetition = Competition.objects.create(name='Test Competition', date='2025-05-17')
    theCompetition.save()

    theEvent = Event.objects.create(competition = theCompetition, eventNumber = 78, name = 'Aspire 3 Freeskate - Group D', date = '2025-05-17', status = 'scheduled')
    theEvent.save()

    #Annabelle
    theClub = Club.objects.create(name = 'Skating Club of Western New York')
    theClub.save()

    theSkater = Skater.objects.create(firstName = 'Annabelle', lastName = 'Vaillancourt', club = theClub)
    theSkater.save()

    theScheduledSkater = ScheduledSkater.objects.create(event = theEvent, skater = theSkater, orderNumber = 3)
    theScheduledSkater.save()

    #
    theClub = Club.objects.create(name = 'Amherst SC (NY)')
    theClub.save()

    theSkater = Skater.objects.create(firstName = 'Grace', lastName = 'Stierheim', club = theClub)
    theSkater.save()

    theScheduledSkater = ScheduledSkater.objects.create(event = theEvent, skater = theSkater, orderNumber = 1)
    theScheduledSkater.save()

    theClub = Club.objects.create(name = 'Forest Hill FSC (Canada)')
    theClub.save()

    theSkater = Skater.objects.create(firstName = 'Steffi', lastName = 'Closner', club = theClub)
    theSkater.save()

    theScheduledSkater = ScheduledSkater.objects.create(event = theEvent, skater = theSkater, orderNumber = 2)
    theScheduledSkater.save()

def rollback_data(apps, schema_editor):

    Competition = apps.get_model('core', 'Competition')
    Club = apps.get_model('core','Club')
    Skater = apps.get_model('core','Skater')
    Event = apps.get_model('core', 'Event')
    ScheduledSkater = apps.get_model('core', 'ScheduledSkater')

    ScheduledSkater.objects.all().delete()
    Event.objects.all().delete()
    Skater.objects.all().delete()
    Club.objects.all().delete()
    Competition.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(populate_initial_data, rollback_data),  # Add the function here
    ]
